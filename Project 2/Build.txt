Please also read Information provided in Info.txt

Build Instructions for TestExecutive
=======================================
TestApplication demonstrates the requirements for Project2
1. Right-Click on TestExecutive and select Set as StartUp Project
2. Set TestApplication to build as an application (.exe)
   a. Right-Click on references > Add References > add DateTime
   b. Right-Click on TestApplication and select Build

General Build Instructions
==========================
1. To build a project as a static library:
   a. Project > Properties > General > Project Defaults > Configuration Type > Static Library
   b. Project > Properties > C/C++ > Preprocessor > Preprocessor Definitions > noTEST_PROJECTNAME;
   c. Right-Click on Project and select Build
2. To build project as an application (.exe)
   a. Project > Properties > General > Project Defaults > Configuration Type > Application (.exe)
   b. Project > Properties > C/C++ > Preprocessor > Preprocessor Definitions > TEST_PROJECTNAME;
   c. Right-Click on Project and select Build

Required References (all references must be built as static libraries)
======================================================================
1. CheckIn needs reference to DateTime
2. DbCore needs reference to DateTime
3. RepositoryCore needs reference to DateTime
4. TestExecutive needs reference to XmlDocument
5. PayLoad needs reference to XmlDocument
6. Query needs references to DateTime and XmlDocument
7. Test needs reference to DateTime

Build Instructions for DateTime as standalone executable
========================================================
1. Right-Click on DateTime and select Set as StartUp Project
2. Set DateTime to build as executable
   a. DateTime > Properties > General > Project Defaults > Configuration Type > Application (.exe)
   b. DateTime > Properties > C/C++ > Preprocessor > Preprocessor Definitions > TEST_DATETIME;
3. Right-Click on DateTime and select Build

Build Instructions for TestUtilities as standalone executable
=============================================================
1. Note that All of the Utilities in the solution's Utilities folder provide all their functionality
   via their header files.
2. For that reason Projects that use them don't have to build them, but simply include their header files.
3. Right-Click on TestUtilities and select Set as StartUp Project
4. TestUtilities > Properties > C/C++ > Preprocessor > Preprocessor Definitions > TEST_TESTUTILITIES;
5. Right-Click on TestUtilities and select Build

Build Instructions for StringUtilities as standalone executable
=============================================================
1. Note that All of the Utilities in the solution's Utilities folder provide all their functionality
   via their header files.
2. For that reason Projects that use them don't have to build them, but simply include their header files.
3. Right-Click on StringUtilities and select Set as StartUp Project
4. StringUtilities > Properties > C/C++ > Preprocessor > Preprocessor Definitions > TEST_STRINGUTILITIES;
5. Right-Click on StringUtilities and select Build

